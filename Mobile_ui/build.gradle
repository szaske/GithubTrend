apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]



    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Required or I'll get a "dexing.DexArchiveBuilderException: Error while dexing" error
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    def mobileUiDependencies = rootProject.ext.mobileUiDependencies
    def mobileUiTestDependencies = rootProject.ext.mobileUiTestDependencies

    // The UI Module is the glue that will be taking care of the dependency injection for the
    // layers, so it needs to know about the classes that will be added to the dependency graph
    compile project(':Presentation')
    compile project(':Data')
    compile project(':Remote')
    compile project(':cache')

    // Library dependencies
    implementation mobileUiDependencies.appCompatV7
    implementation mobileUiDependencies.javaxAnnotation
    implementation mobileUiDependencies.kotlin
    implementation mobileUiDependencies.javaxInject
    implementation mobileUiDependencies.rxKotlin
    implementation mobileUiDependencies.androidAnnotations
    implementation mobileUiDependencies.androidSupportV4
    implementation mobileUiDependencies.androidSupportV13
    implementation mobileUiDependencies.supportRecyclerView
    implementation mobileUiDependencies.supportDesign
    implementation mobileUiDependencies.timber
    implementation mobileUiDependencies.rxAndroid
    implementation mobileUiDependencies.glide
    implementation mobileUiDependencies.dagger
    implementation mobileUiDependencies.daggerSupport

    kapt mobileUiDependencies.daggerCompiler
    kapt mobileUiDependencies.daggerProcessor

    // Added by STZ
    implementation mobileUiDependencies.roomRxJava
    implementation mobileUiDependencies.archRuntime
    implementation mobileUiDependencies.archExtensions
    implementation mobileUiDependencies.constraintLayout
    annotationProcessor mobileUiDependencies.archCompiler

    // Test Dependencies
    kaptTest mobileUiDependencies.daggerCompiler
    testImplementation mobileUiTestDependencies.kotlinJUnit

    // Instrumentation Test Dependencies
    androidTestImplementation mobileUiTestDependencies.junit
    androidTestImplementation mobileUiTestDependencies.mockito
    androidTestImplementation mobileUiTestDependencies.mockitoAndroid
    androidTestImplementation(mobileUiTestDependencies.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.androidRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.androidRules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.espressoIntents) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(mobileUiTestDependencies.espressoContrib) {
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }

    kaptAndroidTest mobileUiDependencies.daggerCompiler


}
